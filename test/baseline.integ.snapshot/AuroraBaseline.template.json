{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc"
     }
    ]
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": "us-east-2a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet1"
     }
    ]
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ]
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": "us-east-2b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ]
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet2"
     }
    ]
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ]
  },
  "VpcPrivateSubnet1Subnet536B997A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": "us-east-2a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PrivateSubnet1"
     }
    ]
   }
  },
  "VpcPrivateSubnet1RouteTableB2C5B500": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PrivateSubnet1"
     }
    ]
   }
  },
  "VpcPrivateSubnet1RouteTableAssociation70C59FA6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet1Subnet536B997A"
    }
   }
  },
  "VpcPrivateSubnet1DefaultRouteBE02A9ED": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet1RouteTableB2C5B500"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    }
   }
  },
  "VpcPrivateSubnet2Subnet3788AAA1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "AvailabilityZone": "us-east-2b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PrivateSubnet2"
     }
    ]
   }
  },
  "VpcPrivateSubnet2RouteTableA678073B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc/PrivateSubnet2"
     }
    ]
   }
  },
  "VpcPrivateSubnet2RouteTableAssociationA89CAD56": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "SubnetId": {
     "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
    }
   }
  },
  "VpcPrivateSubnet2DefaultRoute060D2087": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateSubnet2RouteTableA678073B"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    }
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AuroraBaseline/Vpc"
     }
    ]
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "Vpc8378EB38"
    },
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    }
   }
  },
  "Key961B73FD": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::425845004253:root"
          ]
         ]
        }
       },
       "Resource": "*"
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Condition": {
        "StringEquals": {
         "kms:ViaService": "secretsmanager.us-east-2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::425845004253:root"
          ]
         ]
        }
       },
       "Resource": "*"
      },
      {
       "Action": [
        "kms:CreateGrant",
        "kms:DescribeKey"
       ],
       "Condition": {
        "StringEquals": {
         "kms:ViaService": "secretsmanager.us-east-2.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::425845004253:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "AuroraBaseline encryption key"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AuroraBaselineSecurityGroupF6E850FA": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AuroraBaseline/AuroraBaseline/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   }
  },
  "AuroraBaselineSecurityGroupfromAuroraBaselineprovisiondatabaseSecurityGroup7F1437D6IndirectPortE5E05562": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Database provisioning lambda",
    "FromPort": {
     "Fn::GetAtt": [
      "AuroraBaselineDatabaseD9DEF957",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "AuroraBaselineSecurityGroupF6E850FA",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AuroraBaselineprovisiondatabaseSecurityGroup2B8B5C54",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::GetAtt": [
      "AuroraBaselineDatabaseD9DEF957",
      "Endpoint.Port"
     ]
    }
   }
  },
  "AuroraBaselineSecurityGroupfromAuroraBaselineprovisionuserSecurityGroup0C4CB414IndirectPort94C123F1": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "User provisioning lambda",
    "FromPort": {
     "Fn::GetAtt": [
      "AuroraBaselineDatabaseD9DEF957",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "AuroraBaselineSecurityGroupF6E850FA",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AuroraBaselineprovisionuserSecurityGroup52407F0D",
      "GroupId"
     ]
    },
    "ToPort": {
     "Fn::GetAtt": [
      "AuroraBaselineDatabaseD9DEF957",
      "Endpoint.Port"
     ]
    }
   }
  },
  "AuroraBaselineDatabaseSubnetsCB60D770": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for Database database",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateSubnet1Subnet536B997A"
     },
     {
      "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
     }
    ]
   }
  },
  "AuroraBaselineDatabaseParameterGroupC3358A8A": {
   "Type": "AWS::RDS::DBClusterParameterGroup",
   "Properties": {
    "Description": "Cluster parameter group for aurora-postgresql12",
    "Family": "aurora-postgresql12",
    "Parameters": {
     "rds.logical_replication": "1",
     "max_replication_slots": "10",
     "max_wal_senders": "10",
     "wal_sender_timeout": "0"
    }
   }
  },
  "AuroraBaselineDatabaseSecret77D7BD3B": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"aurora_baseline_manager\"}"
    },
    "KmsKeyId": {
     "Fn::GetAtt": [
      "Key961B73FD",
      "Arn"
     ]
    },
    "Name": "AuroraBaselineManager"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AuroraBaselineDatabaseSecretAttachment26C0D936": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AuroraBaselineDatabaseSecret77D7BD3B"
    },
    "TargetId": {
     "Ref": "AuroraBaselineDatabaseD9DEF957"
    },
    "TargetType": "AWS::RDS::DBCluster"
   }
  },
  "AuroraBaselineDatabaseD9DEF957": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "BackupRetentionPeriod": 1,
    "CopyTagsToSnapshot": true,
    "DBClusterIdentifier": "aurorabaseline",
    "DBClusterParameterGroupName": {
     "Ref": "AuroraBaselineDatabaseParameterGroupC3358A8A"
    },
    "DBSubnetGroupName": {
     "Ref": "AuroraBaselineDatabaseSubnetsCB60D770"
    },
    "EnableCloudwatchLogsExports": [
     "postgresql"
    ],
    "Engine": "aurora-postgresql",
    "EngineVersion": "12.8",
    "KmsKeyId": {
     "Fn::GetAtt": [
      "Key961B73FD",
      "Arn"
     ]
    },
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AuroraBaselineDatabaseSecret77D7BD3B"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AuroraBaselineDatabaseSecret77D7BD3B"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "Port": 5432,
    "PreferredBackupWindow": "01:00-03:00",
    "StorageEncrypted": true,
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "AuroraBaselineSecurityGroupF6E850FA",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot"
  },
  "AuroraBaselineDatabaseLogRetentionpostgresql1E39B050": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/rds/cluster/",
       {
        "Ref": "AuroraBaselineDatabaseD9DEF957"
       },
       "/postgresql"
      ]
     ]
    },
    "RetentionInDays": 30
   }
  },
  "AuroraBaselineDatabaseInstance1795BC015": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "AuroraBaselineDatabaseD9DEF957"
    },
    "DBInstanceClass": "db.t4g.medium",
    "DBInstanceIdentifier": "AuroraBaseline1",
    "DBSubnetGroupName": {
     "Ref": "AuroraBaselineDatabaseSubnetsCB60D770"
    },
    "EnablePerformanceInsights": true,
    "Engine": "aurora-postgresql",
    "PerformanceInsightsKMSKeyId": {
     "Fn::GetAtt": [
      "Key961B73FD",
      "Arn"
     ]
    },
    "PerformanceInsightsRetentionPeriod": 7,
    "PubliclyAccessible": false
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AuroraBaselineprovisiondatabaseServiceRoleE4AD5D4C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisiondatabaseServiceRoleDefaultPolicy975F753E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Describe*",
        "kms:Generate*",
        "kms:List*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Key961B73FD",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuroraBaselineprovisiondatabaseServiceRoleDefaultPolicy975F753E",
    "Roles": [
     {
      "Ref": "AuroraBaselineprovisiondatabaseServiceRoleE4AD5D4C"
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisiondatabaseSecurityGroup2B8B5C54": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function AuroraBaselineprovisiondatabase7EC81E3B",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisiondatabase0A8C2A08": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-425845004253-us-east-2",
     "S3Key": "2e2842dd670204f0b41c7797a6bb94b6f7e9d33378e4a7d7a0af2390fc18c159.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AuroraBaselineprovisiondatabaseServiceRoleE4AD5D4C",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "MANAGER_SECRET_ARN": {
       "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Timeout": 840,
    "TracingConfig": {
     "Mode": "Active"
    },
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "AuroraBaselineprovisiondatabaseSecurityGroup2B8B5C54",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VpcPrivateSubnet1Subnet536B997A"
      },
      {
       "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
      }
     ]
    }
   },
   "DependsOn": [
    "AuroraBaselineprovisiondatabaseServiceRoleDefaultPolicy975F753E",
    "AuroraBaselineprovisiondatabaseServiceRoleE4AD5D4C",
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisiondatabaseLogRetentionFB8B85F6": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AuroraBaselineprovisiondatabase0A8C2A08"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleD9D42F80": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleDefaultPolicyA8429C5F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AuroraBaselineprovisiondatabase0A8C2A08",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AuroraBaselineprovisiondatabase0A8C2A08",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleDefaultPolicyA8429C5F",
    "Roles": [
     {
      "Ref": "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleD9D42F80"
     }
    ]
   }
  },
  "AuroraBaselineDatabaseProviderframeworkonEventD93166A5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-425845004253-us-east-2",
     "S3Key": "8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleD9D42F80",
      "Arn"
     ]
    },
    "Description": "AWS CDK resource provider framework - onEvent (AuroraBaseline/AuroraBaseline/DatabaseProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "AuroraBaselineprovisiondatabase0A8C2A08",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Runtime": "nodejs14.x",
    "Timeout": 900
   },
   "DependsOn": [
    "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleDefaultPolicyA8429C5F",
    "AuroraBaselineDatabaseProviderframeworkonEventServiceRoleD9D42F80"
   ]
  },
  "AuroraBaselineDatabaseProviderframeworkonEventLogRetention41103D11": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AuroraBaselineDatabaseProviderframeworkonEventD93166A5"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   }
  },
  "AuroraBaselineprovisionuserServiceRole83884FC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisionuserServiceRoleDefaultPolicy855FE579": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
       }
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Describe*",
        "kms:Generate*",
        "kms:List*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Key961B73FD",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:PutSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AuroraBaselineReader49D45411"
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:PutSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AuroraBaselineWriter92775E0C"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuroraBaselineprovisionuserServiceRoleDefaultPolicy855FE579",
    "Roles": [
     {
      "Ref": "AuroraBaselineprovisionuserServiceRole83884FC2"
     }
    ]
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisionuserSecurityGroup52407F0D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function AuroraBaselineprovisionuser2E376FF3",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisionuserB9F922E7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-425845004253-us-east-2",
     "S3Key": "04b2d4f5839671596d48620370a399becc50050e4ef4f6757f137ed781a1a722.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AuroraBaselineprovisionuserServiceRole83884FC2",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "MANAGER_SECRET_ARN": {
       "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
      },
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Timeout": 840,
    "TracingConfig": {
     "Mode": "Active"
    },
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "AuroraBaselineprovisionuserSecurityGroup52407F0D",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VpcPrivateSubnet1Subnet536B997A"
      },
      {
       "Ref": "VpcPrivateSubnet2Subnet3788AAA1"
      }
     ]
    }
   },
   "DependsOn": [
    "AuroraBaselineprovisionuserServiceRoleDefaultPolicy855FE579",
    "AuroraBaselineprovisionuserServiceRole83884FC2",
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineprovisionuserLogRetention44CAFEF0": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AuroraBaselineprovisionuserB9F922E7"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "DependsOn": [
    "VpcPrivateSubnet1DefaultRouteBE02A9ED",
    "VpcPrivateSubnet1RouteTableAssociation70C59FA6",
    "VpcPrivateSubnet2DefaultRoute060D2087",
    "VpcPrivateSubnet2RouteTableAssociationA89CAD56"
   ]
  },
  "AuroraBaselineUserProviderframeworkonEventServiceRole09BF233E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "AuroraBaselineUserProviderframeworkonEventServiceRoleDefaultPolicy5123FD66": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AuroraBaselineprovisionuserB9F922E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AuroraBaselineprovisionuserB9F922E7",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AuroraBaselineUserProviderframeworkonEventServiceRoleDefaultPolicy5123FD66",
    "Roles": [
     {
      "Ref": "AuroraBaselineUserProviderframeworkonEventServiceRole09BF233E"
     }
    ]
   }
  },
  "AuroraBaselineUserProviderframeworkonEvent4ECA9147": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-425845004253-us-east-2",
     "S3Key": "8e3d635893ea17fa3158623489cd42c680fad925b38de1ef51cb10d84f6e245e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AuroraBaselineUserProviderframeworkonEventServiceRole09BF233E",
      "Arn"
     ]
    },
    "Description": "AWS CDK resource provider framework - onEvent (AuroraBaseline/AuroraBaseline/UserProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "AuroraBaselineprovisionuserB9F922E7",
        "Arn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Runtime": "nodejs14.x",
    "Timeout": 900
   },
   "DependsOn": [
    "AuroraBaselineUserProviderframeworkonEventServiceRoleDefaultPolicy5123FD66",
    "AuroraBaselineUserProviderframeworkonEventServiceRole09BF233E"
   ]
  },
  "AuroraBaselineUserProviderframeworkonEventLogRetention2E5310B0": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AuroraBaselineUserProviderframeworkonEvent4ECA9147"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   }
  },
  "AuroraBaselineReader49D45411": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": {
      "Fn::Join": [
       "",
       [
        "{\"username\":\"aurora_baseline_reader\",\"masterarn\":\"",
        {
         "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
        },
        "\"}"
       ]
      ]
     }
    },
    "KmsKeyId": {
     "Fn::GetAtt": [
      "Key961B73FD",
      "Arn"
     ]
    },
    "Name": "AuroraBaselineReader"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AuroraBaselineReaderAttachmentF0F6EDE9": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AuroraBaselineReader49D45411"
    },
    "TargetId": {
     "Ref": "AuroraBaselineDatabaseD9DEF957"
    },
    "TargetType": "AWS::RDS::DBCluster"
   }
  },
  "AuroraBaselineWriter92775E0C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": {
      "Fn::Join": [
       "",
       [
        "{\"username\":\"aurora_baseline_writer\",\"masterarn\":\"",
        {
         "Ref": "AuroraBaselineDatabaseSecretAttachment26C0D936"
        },
        "\"}"
       ]
      ]
     }
    },
    "KmsKeyId": {
     "Fn::GetAtt": [
      "Key961B73FD",
      "Arn"
     ]
    },
    "Name": "AuroraBaselineWriter"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "AuroraBaselineWriterAttachment2617FC74": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AuroraBaselineWriter92775E0C"
    },
    "TargetId": {
     "Ref": "AuroraBaselineDatabaseD9DEF957"
    },
    "TargetType": "AWS::RDS::DBCluster"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-425845004253-us-east-2",
     "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ]
  }
 },
 "Outputs": {
  "AuroraBaselineAuroraBaselineReadEndpointB7CA79EB": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::GetAtt": [
        "AuroraBaselineDatabaseD9DEF957",
        "ReadEndpoint.Address"
       ]
      },
      ":",
      {
       "Fn::GetAtt": [
        "AuroraBaselineDatabaseD9DEF957",
        "Endpoint.Port"
       ]
      }
     ]
    ]
   },
   "Export": {
    "Name": "AuroraBaselineReadEndpoint"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}